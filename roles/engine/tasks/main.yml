---
##############################################
# The shell is the engine of every development

- name: zsh | Creates directory for zsh files | file
  file:
    path: "{{ dotfiles.home }}/.config/dotfiles/engine"
    state: directory

- name: git | Installs git | apt
  become: yes
  become_user: root
  apt:
    name: git
    state: present

- name: git | Links global gitignore file | file
  file:
    src: "{{ playbook_dir }}/roles/engine/files/gitignore_global.link"
    dest: "{{ dotfiles.home }}/.gitignore_global"
    state: link
    force: yes

- name: git | Copies git config | template
  template:
    src: "gitconfig.j2"
    dest: "{{ dotfiles.home }}/.gitconfig"

- name: docker | Installs docker | apt
  become: yes
  become_user: root
  apt:
    name: docker
    state: present

- name: docker | Installs docker-compose | apt
  become: yes
  become_user: root
  apt:
    name: docker-compose
    state: present

- name: docker | Links docker.zsh file | file
  file:
    src: "{{ playbook_dir }}/roles/engine/files/docker.zsh.link"
    dest: "{{ dotfiles.home }}/.config/dotfiles/engine/docker.zsh"
    state: link
    force: yes

- name: act | Create temporary directory | tempfile
  tempfile:
    state: directory
    suffix: act
  register: temp_act

- name: act | Download script | get_url
  become: yes
  become: root
  get_url:
    url: "https://raw.githubusercontent.com/nektos/act/master/install.sh"
    dest: "{{ temp_act.path }}/install.sh"
    mode: '0700'
  when: temp_act.path is defined

- name: act | Install act | command
  become: yes
  become_user: root
  command: "{{ temp_act.path }}/install.sh -b /opt/act"
  when: temp_act.path is defined

- name: act | Remove script | file
  file:
    path: "{{ temp_act.path }}"
    state: absent
  when: temp_act.path is defined

- name: tmux | Installs tmux | apt
  become: yes
  become_user: root
  apt:
    name: tmux
    state: present

- name: tmux | Installs cmake | apt
  become: yes
  become_user: root
  apt:
    name: cmake
    state: present

- name: tmux | Installs tmux-plugin-manager | apt
  become: yes
  become_user: root
  apt:
    name: tmux-plugin-manager
    state: present

- name: tmux | Links .tmux.conf file | file
  file:
    src: "{{ playbook_dir }}/roles/engine/files/tmux.conf.link"
    dest: "{{ dotfiles.home }}/.tmux.conf"
    state: link
    force: yes

- name: fzf | Installs fzf | apt
  become: yes
  become_user: root
  apt:
    name: fzf
    state: present

- name: fzf | Installs fd-find | apt
  become: yes
  become_user: root
  apt:
    name: fd-find
    state: present

- name: fzf | Installs bat | apt
  become: yes
  become_user: root
  apt:
    name: bat
    state: present

- name: fzf | Links fzf.zsh file | file
  file:
    src: "{{ playbook_dir }}/roles/engine/files/fzf.zsh.link"
    dest: "{{ dotfiles.home }}/.config/dotfiles/engine/fzf.zsh"
    state: link
    force: yes

- name: zsh | Installs zsh | apt
  become: yes
  become_user: root
  apt:
    name: zsh
    state: present

- name: zsh | Sets zsh as default shell for {{ dotfiles.username }} | command
  become: yes
  become_user: root
  command: chsh -s /bin/zsh {{ dotfiles.username }}
  register: zsh_for_user
  failed_when: zsh_for_user.rc >= 1
  changed_when: zsh_for_user.rc == 0

- name: zsh | Checks for oh-my-zsh installation | stat
  stat:
    path: "{{ dotfiles.home }}/.oh-my-zsh"
  register: oh_my_zsh_stat

- name: zsh | Installs oh-my-zsh | raw
  raw: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"'
  when: not oh_my_zsh_stat.stat.exists

- name: hab | Install hab | git
  git:
    repo: "https://github.com/alexdesousa/hab.git"
    dest: "{{ dotfiles.home }}/.oh-my-zsh/custom/plugins/hab"
    clone: yes
    update: yes
    force: yes

- name: oath | Installs oathtool | apt
  become: yes
  become_user: root
  apt:
    name: oathtool
    state: present

- name: oath | Installs gnupg2 | apt
  become: yes
  become_user: root
  apt:
    name: gnupg2
    state: present

- name: oath | Installs xclip | apt
  become: yes
  become_user: root
  apt:
    name: xclip
    state: present

- name: oath | Install oath | git
  git:
    repo: "https://github.com/alexdesousa/oath.git"
    dest: "{{ dotfiles.home }}/.oh-my-zsh/custom/plugins/oath"
    clone: yes
    update: yes
    force: yes

- name: zsh-syntax-highlighting | Install zsh-syntax-highlighting | git
  git:
    repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
    dest: "{{ dotfiles.home }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
    clone: yes
    update: yes
    force: yes

- name: zsh-autosuggestions | Install zsh-autosuggestions | git
  git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions.git"
    dest: "{{ dotfiles.home }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    clone: yes
    update: yes
    force: yes

- name: zsh | Links aliases.zsh file | file
  file:
    src: "{{ playbook_dir }}/roles/engine/files/aliases.zsh.link"
    dest: "{{ dotfiles.home }}/.config/dotfiles/engine/aliases.zsh"
    state: link
    force: yes

- name: asdf | Installs asdf | git
  git:
    repo: "https://github.com/asdf-vm/asdf.git"
    dest: "{{ dotfiles.home }}/.asdf"
    clone: yes
    update: yes
    force: yes

- name: zsh | Install Etadelius theme | file
  file:
    src: "{{ playbook_dir }}/roles/engine/files/etadelius.zsh-theme.link"
    dest: "{{ dotfiles.home }}/.oh-my-zsh/themes/etadelius.zsh-theme"
    state: link
    force: yes

- name: zsh | Generates .zshrc | template
  template:
    src: "zshrc.j2"
    dest: "{{ playbook_dir }}/roles/engine/files/zshrc.link"

- name: zsh | Links .zshrc file | file
  file:
    src: "{{ playbook_dir }}/roles/engine/files/zshrc.link"
    dest: "{{ dotfiles.home }}/.zshrc"
    state: link
    force: yes

- name: sqitch | Installs sqitch | apt
  become: yes
  become_user: root
  apt:
    pkg:
    - sqitch
    - libdbd-pg-perl
    - postgresql-client

- name: sqitch | Creates folder for sqitch config | file
  file:
    path: "{{ dotfiles.home }}/.sqitch"
    state: directory

- name: sqitch | Generate sqitch.conf file | template
  template:
    src: "sqitch.conf.j2"
    dest: "{{ dotfiles.home }}/.sqitch/sqitch.conf"

---
###############################################################################
# An engine without a crew cannot be controlled

- name: zsh | Creates directory for zsh files | file
  file:
    path: "{{ ansible_env.HOME }}/.config/dotfiles/crew"
    state: directory

- name: erlang | Installs dependencies | apt
  become: yes
  become_method: sudo
  loop: "{{ erlang.dependencies }}"
  apt:
    name: "{{ item }}"
    state: present

- name: erlang | Installs Erlang plugin | shell
  command: "{{ asdf.bin }} plugin-add erlang"
  register: erlang_add
  failed_when: erlang_add.rc == 1

- name: erlang | Updates Erlang plugin | shell
  command: "{{ asdf.bin }} plugin-update erlang"

- name: erlang | Installs Erlang versions | command
  command: "{{ asdf.bin }} install erlang {{ item }}"
  loop: "{{ erlang.versions }}"

- name: erlang | Sets default Erlang version | command
  command: "{{ asdf.bin }} global erlang {{ erlang.versions[0] }}"

- name: erlang | Links erlang.zsh file | file
  file:
    src: "{{ playbook_dir }}/links/erlang.zsh.link"
    dest: "{{ ansible_env.HOME }}/.config/dotfiles/crew/erlang.zsh"
    state: link
    force: yes

- name: elixir | Installs Elixir plugin | shell
  command: "{{ asdf.bin }} plugin-add elixir"
  register: elixir_add
  failed_when: elixir_add.rc == 1

- name: elixir | Updates Elixir plugin | shell
  command: "{{ asdf.bin }} plugin-update elixir"

- name: elixir | Installs Elixir versions | command
  command: "{{ asdf.bin }} install elixir {{ item }}"
  loop: "{{ elixir.versions }}"

- name: elixir | Sets default Elixir version | command
  command: "{{ asdf.bin }} global elixir {{ elixir.versions[0] }}"

- name: nodejs | Installs dependencies | apt
  become: yes
  become_method: sudo
  loop: "{{ nodejs.dependencies }}"
  apt:
    name: "{{ item }}"
    state: present

- name: nodejs | Installs NodeJS plugin | shell
  command: "{{ asdf.bin }} plugin-add nodejs"
  register: nodejs_add
  failed_when: nodejs_add.rc == 1

- name: nodejs | Updates NodeJS plugin | shell
  command: "{{ asdf.bin }} plugin-update nodejs"

- name: nodejs | Installs NodeJS versions | command
  shell: "source {{ asdf.src }} && {{ asdf.bin }} install nodejs {{ item }}"
  args:
    executable: /bin/zsh
  loop: "{{ nodejs.versions }}"

- name: nodejs | Sets default NodeJS version | command
  command: "{{ asdf.bin }} global nodejs {{ nodejs.versions[0] }}"

- name: ruby | Installs dependencies | apt
  become: yes
  become_method: sudo
  loop: "{{ ruby.dependencies }}"
  apt:
    name: "{{ item }}"
    state: present

- name: ruby | Installs Ruby plugin | shell
  command: "{{ asdf.bin }} plugin-add ruby"
  register: ruby_add
  failed_when: ruby_add.rc == 1

- name: ruby | Updates Ruby plugin | shell
  command: "{{ asdf.bin }} plugin-update ruby"

- name: ruby | Installs Ruby versions | command
  command: "{{ asdf.bin }} install ruby {{ item }}"
  loop: "{{ ruby.versions }}"

- name: ruby | Sets default Ruby version | command
  command: "{{ asdf.bin }} global ruby {{ ruby.versions[0] }}"

- name: terraform | Installs Terraform plugin | shell
  command: "{{ asdf.bin }} plugin-add terraform https://github.com/asdf-community/asdf-hashicorp.git"
  register: terraform_add
  failed_when: terraform_add.rc == 1

- name: terraform | Updates Terraform plugin | shell
  command: "{{ asdf.bin }} plugin-update terraform"

- name: terraform | Installs Terraform versions | command
  command: "{{ asdf.bin }} install terraform {{ item }}"
  loop: "{{ terraform.versions }}"

- name: terraform | Sets default Terraform version | command
  command: "{{ asdf.bin }} global terraform {{ terraform.versions[0] }}"

- name: yarn | Installs Yarn plugin | shell
  command: "{{ asdf.bin }} plugin-add yarn"
  register: yarn_add
  failed_when: yarn_add.rc == 1

- name: yarn | Updates Yarn plugin | shell
  command: "{{ asdf.bin }} plugin-update yarn"

- name: yarn | Installs Yarn versions | command
  command: "{{ asdf.bin }} install yarn {{ item }}"
  loop: "{{ yarn.versions }}"

- name: yarn | Sets default Yarn version | command
  command: "{{ asdf.bin }} global yarn {{ yarn.versions[0] }}"

- name: rust | Installs Rust plugin | shell
  command: "{{ asdf.bin }} plugin-add rust"
  register: rust_add
  failed_when: rust_add.rc == 1

- name: rust | Updates Rust plugin | shell
  command: "{{ asdf.bin }} plugin-update rust"

- name: rust | Installs Rust versions | command
  command: "{{ asdf.bin }} install rust {{ item }}"
  loop: "{{ rust.versions }}"

- name: rust | Sets default Rust version | command
  command: "{{ asdf.bin }} global rust {{ rust.versions[0] }}"

- name: asdf | Reshim languages | shell
  command: "{{ asdf.bin }} reshim"
